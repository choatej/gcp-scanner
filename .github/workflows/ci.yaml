name: CI
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - main
jobs:
  setup-python:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt
        working-directory: ./scanner

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Megalinter and run
        run: |
          curl -sL https://raw.githubusercontent.com/nvuillam/mega-linter/master/install.sh | bash
          ./bin/mega-linter-runner

  build-react:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Read Node.js version from .node-version
      id: node_version
      run: echo ::set-output name=node_version::$(cat .node-version)
      working-directory: ${{ github.workspace }}/visualizer
    - name: Setup Node.js
      uses: actions/setup-node@v4.0.3
      with:
        node-version: ${{ steps.node_version.outputs.node_version }}
    - name: Install dependencies
      run: npm install
      working-directory: visualizer
    - name: build
      run: npm run build
      working-directory: visualizer

  test-react:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Read Node.js version from .node-version
      id: node_version
      run: echo ::set-output name=node_version::$(cat .node-version)
      working-directory: ${{ github.workspace }}/visualizer
    - name: Setup Node.js
      uses: actions/setup-node@v4.0.3
      with:
        node-version: ${{ steps.node_version.outputs.node_version }}
    - name: Install dependencies
      run: npm install
      working-directory: visualizer
    - name: test
      run: npm test:dev
      working-directory: visualizer

  test-python:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Read Python Version from pyproject.toml
      # use the existing python to get the right one
      run: |
          PYTHON_VERSION=$(cat pyproject.toml | grep -oP '(?<=python = ").*(?=")')
          echo $PYTHON_VERSION > ${{github.workspace}}/.python-version
      continue-on-error: true
      working-directory: scanner
    - name: Set up Python
      uses: actions/setup-python@v5
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install -r requirements.txt
      working-directory: scanner
    - name: test
      run: pytest -s -v
      working-directory: scanner
